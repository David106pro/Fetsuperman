import requests
from bs4 import BeautifulSoup
import pandas as pd

# 你提供的名称列表
name_list = {
    "零速争霸",
    "X 龙时代",
    "阿福漫游记",
    "奥利的美食探险记第二季",
    "奥利的美食探险记第一季",
    "变形联盟之超变战神",
    "变形联盟之超限突破",
    "变形联盟之勇士崛起",
    "草原豆思之 X 囧特工",
    "草原豆思之快乐家园",
    "草原豆思之危机迫近",
    "超迷你百科 2",
    "超迷你战士第二季",
    "超迷你战士预告片 2",
    "超神学院 第 1 季",
    "丛林特工队之健康大作战",
    "电击小子 1",
    "电击小子 2",
    "动物行星大探险",
    "斗罗大陆 2 绝世唐门第一季",
    "斗罗大陆 2 绝世唐门第 5 季",
    "斗罗大陆 2 绝世唐门第二季",
    "斗罗大陆 3 龙王传说第一季",
    "斗罗大陆 3 龙王传说第二季",
    "斗罗大陆 4 终极斗罗",
    "斗罗大陆 4 终极斗罗",
    "斗罗大陆外传神界传说",
    "斗罗大陆外传神界传说剧场版•上",
    "斗罗大陆外传神界传说剧场版•下",
    "斗罗大陆外传唐门英雄传（网络大电影）",
    "逗逗迪迪爱探险",
    "逗逗迪迪之酷比侦探",
    "逗逗迪迪之酷比侦探 II",
    "福乐寻宝历险记二",
    "福乐寻宝历险记一",
    "钢铁骑士 S1",
    "钢铁骑士第 2 季",
    "果宝特攻",
    "海底小纵队第六季",
    "画江湖之不良人 S2",
    "画江湖之不良人 S3",
    "画江湖之不良人 S1",
    "机变英盟",
    "机变英盟",
    "积木小战队",
    "极品家丁",
    "疾风劲射第一季",
    "假面骑士圣刃",
    "叫我僵小鱼叙缘篇第二季双鱼记",
    "咖宝车神之巨兽时代",
    "咖宝车神之拯救联盟下",
    "铠兽超人 2 超次元战队",
    "超级玩家_科学风暴实验室",
    "钶龙燃剧场技能篇",
    "钶龙燃剧场力量篇",
    "钶龙战记之钶龙对对碰",
    "钶龙战记之神奇脑洞",
    "孔小西和哈基姆",
    "恐龙记：尔玛的丛林秘史",
    "恐龙饲养员：我有一只霸王龙",
    "抠鼻班长",
    "酷比的博物馆",
    "快乐的小熊尼尼第二季",
    "快乐摩登之宝贝计划",
    "快乐摩登之幸福的家庭",
    "乐比悠悠之天天向上",
    "乐融龙第一季",
    "龙时代",
    "路易贝贝",
    "罗米熊与丹米兔",
    "麦圈可可宝岛奇遇记",
    "麦圈可可漫游记",
    "麦圈可可寻宝记",
    "麦圈可可远古大冒险",
    "猫鱼",
    "毛驴小侦探",
    "毛球大牙奇趣之旅奔走大草原",
    "毛球大牙奇趣之旅_脱线漂流记",
    "帽儿山的鬼子兵",
    "美食大冒险第一季",
    "美食大冒险第二季",
    "美食大冒险之文明之旅",
    "美术馆之夜（近代中国美术篇 1-130)",
    "萌鸡小队 4",
    "萌浪兔第五季",
    "盟卡车神之魔幻对决 又名 神奇历险记 2",
    "梦幻布布星 3",
    "梦想学园",
    "梦想之旅",
    "蜜宝游哈密",
    "那萨尔丁第一二季",
    "碰碰狐和鲨鱼宝宝宇宙大冒险",
    "平博士密码第二季",
    "平博士密码第一季",
    "七彩虹部落之天天向上",
    "奇幻水晶晶",
    "奇奇乐乐学知识",
    "汽车世界之救援队第 3 季",
    "茜茜公主第二季",
    "茜茜公主第二季",
    "茜茜公主第二季",
    "茜茜公主第一季",
    "请吃红小豆吧外传莫相忘",
    "请吃红小豆吧！第 0.5 季",
    "请吃红小豆吧",
    "热血小将",
    "瑞奇小恐龙",
    "赛尔号 3 战神联盟",
    "三只松鼠之松鼠小镇 2",
    "三只松鼠之中国行",
    "森巴幸福岛",
    "森巴幸福岛 2",
    "鲨鱼宝宝克林",
    "神奇的多比",
    "神奇的朋友 3 咖宝车神",
    "神奇的朋友 4_咖宝车神",
    "神犬勇闯机械城",
    "神探搭档",
    "生死诀第二季",
    "生死诀第一季",
    "十二生肖奇遇记",
    "十二生肖上学记",
    "石器时代 第二季",
    "石器时代第一季",
    "特工浣影之丛林守卫战",
    "特工浣影之全员出击",
    "特工浣影之特工日常",
    "特工浣影之未解之谜",
    "提普和托普",
    "天空娃娃",
    "天外福星_赤剑传奇",
    "跳跳鱼世界第 3 季",
    "跳跳鱼世界第 4 季",
    "跳跳鱼世界第 6 季",
    "跳跳鱼世界第 7 季",
    "土波兔之成长日记第二季",
    "土波兔之成长日记第一季",
    "土波兔之好好习惯",
    "兔小贝奇妙昆虫",
    "兔小贝之神奇的大自然",
    "兔小贝寓言故事",
    "超级玩家_蛙趣潮玩",
    "完美世界第 2 季",
    "完美世界第一季",
    "汪汪同学爱帮忙",
    "武当虹少年",
    "武当虹少年 2",
    "小兔班弟之返航总动员",
    "小兔班弟之海岛探险记",
    "小象艾拉",
    "心奇爆龙战车 4 之战龙合体",
    "心奇爆龙战车之爆龙机甲的力量（暂定名）",
    "新麦圈可可美食天下第一季",
    "新年来啦之神奇武功第五季",
    "新年来啦第一季",
    "新年来啦之百草解药第六季",
    "新年来啦之巨门再现第七季",
    "新年来啦之神秘宝藏第二季",
    "新年来啦之文字大劫难第三季",
    "新年来来之勇闯魔山第四季",
    "星际小蚂蚁之五行归来第一季",
    "星际小神探第二季",
    "形状",
    "妖怪手表第三季",
    "妖怪手表第四季",
    "优优历险记",
    "幽篁吟",
    "战斗王 EX",
    "拯救地球_麦圈可可在行动",
    "智谋家族",
    "猪猪侠之恐龙日记 3",
    "猪猪侠之恐龙日记 4",
    "猪猪侠之五灵守卫者上部",
    "猪猪侠之五灵守卫者下部"
}

# 结果存储
results = []

# 设置请求头，模拟浏览器访问
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
}

for name in name_list:
    search_url = f"https://v.qq.com/x/search/?q={name}"
    response = requests.get(search_url, headers=headers)

    # 设置正确的编码格式
    response.encoding = response.apparent_encoding

    if response.status_code != 200:
        print(f"Failed to retrieve search results for {name}")
        results.append((name, "Failed to retrieve"))
        continue

    soup = BeautifulSoup(response.text, 'html.parser')
    first_result = soup.find("a", target="_blank", _stat="video:poster_tle")

    if first_result:
        category_tag = first_result.find("span", class_="type")
        if category_tag:
            category = category_tag.get_text()
        else:
            category = "No category found"
    else:
        category = "No result found"

    results.append((name, category))
    print(f"Name: {name}, Category: {category}")

# 将结果保存到 DataFrame 并导出为 Excel 文件
df = pd.DataFrame(results, columns=["Name", "Category"])
df.to_excel("search_results.xlsx", index=False)
print("Results saved to search_results.xlsx")
